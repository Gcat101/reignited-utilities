buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = new Date().format('dd-MM-yyyy-HH-mm-ss')
group = 'site.hellishmods.reignitedutilities'
archivesBaseName = 'reignitedutilities'

jarJar.enable()

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                reignitedutilities {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                reignitedutilities {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'reignitedutilities', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                reignitedutilities {
                    source sourceSets.main
                }
            }
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name "cursemaven"
        url "https://cursemaven.com"
    }
    maven { // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven { // CTM
        url "https://maven.tterrag.com/"
    }
    maven { url 'https://maven.blamejared.com' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'

    implementation fg.deobf("team.chisel.ctm:CTM:MC1.16.1-1.1.2.6") {
        jarJar.ranged(it, "[2.0,3.0)")
    }

    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.2:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.2")
    
    implementation fg.deobf("curse.maven:cofh_core-69162:4022663")
    implementation fg.deobf("curse.maven:thermal_foundation-222880:4022666")
    implementation fg.deobf("curse.maven:thermal_expansion-69163:4063134")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "reignitedutilities",
            "Specification-Vendor": "reignitedutilitiesareus",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"reignitedutilitiessareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

jarJar {
    fromRuntimeConfiguration()
    dependencies {
        include(dependency("team.chisel.ctm:CTM"))
    }
}
reobf {
    jarJar {}
}
afterEvaluate {
    tasks.jar.finalizedBy tasks.reobfJar
    tasks.jarJar.finalizedBy tasks.reobfJarJar
    tasks.reobfJarJar.enabled = true
}
tasks.build.dependsOn tasks.jarJar